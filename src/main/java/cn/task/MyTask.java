package cn.task;

import cn.exploit.ExploitFather;
import javafx.concurrent.Task;
import javafx.scene.control.TextArea;

import java.lang.reflect.Method;

public class MyTask extends Task {

    private int status;
    private String url;
    private String classname;
    private TextArea textArea;
    private boolean isPoc;
    private String payload;


    protected Object call() throws Exception {
        if(isPoc == true){
            startVer();
        }else{
            startExp();
        }
        status = 1;
        return 1;
    }

    /**
     * 通过反射调用poc
     */
    public void startVer(){
        String name = "cn.exploit."+classname;
        Class pocClass= null;
        try {
            pocClass = Class.forName(name);
            ExploitFather exploitFather = (ExploitFather)pocClass.newInstance();
            Method method = pocClass.getMethod("poc",String.class);
            Object result = method.invoke(exploitFather,url);

            textArea.setText(result.toString());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }


    public void startExp(){
        String name = "cn.exploit."+classname;
        Class pocClass= null;
        try {
            pocClass = Class.forName(name);
            ExploitFather exploitFather = (ExploitFather)pocClass.newInstance();
            Method method = pocClass.getMethod("exp",String.class,String.class);
            Object result = method.invoke(exploitFather,url,payload);

            textArea.setText(result.toString());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }



    public String getUrl() {
        return url;
    }

    public String getClassname() {
        return classname;
    }

    public TextArea getTextArea() {
        return textArea;
    }

    public int getStatus(){
        return status;
    }

    public void setUrl(String url) {
        this.url = url;
    }

    public void setClassname(String classname) {
        this.classname = classname;
    }

    public void setTextArea(TextArea textArea) {
        this.textArea = textArea;
    }

    public boolean isPoc() {
        return isPoc;
    }

    public void setPoc(boolean poc) {
        isPoc = poc;
    }

    public String getPayload() {
        return payload;
    }

    public void setPayload(String payload) {
        this.payload = payload;
    }

}
